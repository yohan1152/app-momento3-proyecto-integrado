{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\CESDE\\\\app-airbnb\\\\screens\\\\login.js\";\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TouchableHighlight, TextInput } from \"react-native-gesture-handler\";\nimport color from \"../styles/colors\";\n\nfunction Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var getUser = function getUser() {\n    var url, response, json;\n    return _regeneratorRuntime.async(function getUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            url = \"http://192.168.0.3:3000/api/validateuser\";\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(url, {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: username,\n                password: password\n              })\n            }));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            json = _context.sent;\n\n            if (json.user) {\n              navigation.navigate('ListProperties', {\n                userid: json.user._id\n              });\n            } else {\n              Alert.alert(\"Authentication Error\", json.response);\n            }\n\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert(\"An error has ocurred: \" + _context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.loginScreenContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.loginFormView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"../assets/icon.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Username\",\n    style: styles.loginTextInput,\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Password\",\n    style: styles.loginTextInput,\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableHighlight, {\n    style: styles.buttom,\n    onPress: getUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttomText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Sign in\")), React.createElement(TouchableHighlight, {\n    style: styles.buttom,\n    onPress: function onPress() {\n      return navigation.navigate('CreateUsers');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttomText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Sign up\"))));\n}\n\nvar styles = StyleSheet.create({\n  loginScreenContainer: {\n    flex: 1,\n    backgroundColor: color.Black,\n    alignItems: 'center'\n  },\n  loginFormView: {\n    marginTop: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%',\n    height: '60%',\n    backgroundColor: color.Gray,\n    borderRadius: 10\n  },\n  image: {\n    height: 200,\n    width: 200\n  },\n  loginTextInput: {\n    color: color.White,\n    borderColor: color.Black,\n    backgroundColor: color.Gray,\n    borderRadius: 10,\n    borderWidth: 1,\n    height: 40,\n    width: Dimensions.get('screen').width * 0.50,\n    fontSize: 14,\n    padding: 10,\n    margin: 5\n  },\n  buttom: {\n    backgroundColor: color.AquaMarine,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 40,\n    margin: 4,\n    padding: 4,\n    width: Dimensions.get('screen').width * 0.30,\n    alignItems: 'center',\n    borderRadius: 10,\n    borderColor: color.Black,\n    borderWidth: 2\n  },\n  buttomText: {\n    color: color.White,\n    textShadowColor: color.Black,\n    textShadowRadius: 2,\n    fontSize: 16\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/CESDE/app-airbnb/screens/login.js"],"names":["React","useState","TouchableHighlight","TextInput","color","Login","navigation","username","setUsername","password","setPassword","getUser","url","fetch","method","headers","Accept","body","JSON","stringify","response","json","user","navigate","userid","_id","Alert","alert","styles","loginScreenContainer","loginFormView","image","require","loginTextInput","text","buttom","buttomText","StyleSheet","create","flex","backgroundColor","Black","alignItems","marginTop","justifyContent","width","height","Gray","borderRadius","White","borderColor","borderWidth","Dimensions","get","fontSize","padding","margin","AquaMarine","textShadowColor","textShadowRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {Image} from 'react-native';\nimport { Text, View, StyleSheet, Dimensions, Alert } from 'react-native';\nimport { TouchableHighlight,  TextInput } from \"react-native-gesture-handler\";\nimport color from '../styles/colors';\n\nfunction Login({ navigation }) {\n  const [username, setUsername] = useState(\"\");    \n  const [password, setPassword] = useState(\"\");\n  const getUser = async () => {\n    \n    try {\n        const url = \"http://192.168.0.3:3000/api/validateuser\"\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                username: username,\n                password: password\n            }),\n        });\n        const json = await response.json();        \n        if(json.user){\n          navigation.navigate('ListProperties',{\n            userid: json.user._id\n          });\n        }else{\n          Alert.alert(\"Authentication Error\",json.response);\n        }\n    } catch (error) {\n        Alert.alert(\"An error has ocurred: \" + error);            \n    }\n}\n  \n  return (\n    <View style={styles.loginScreenContainer}>\n      <View style={styles.loginFormView}>\n        <Image style={styles.image} source={require('../assets/icon.png')}></Image>\n        <TextInput placeholder=\"Username\" style={styles.loginTextInput} onChangeText={text => setUsername(text)}/>\n        <TextInput placeholder=\"Password\" style={styles.loginTextInput} secureTextEntry={true} onChangeText={text => setPassword(text)} />\n        <TouchableHighlight style={styles.buttom} onPress={getUser}>\n          <Text style={styles.buttomText}>Sign in</Text>\n        </TouchableHighlight>\n        <TouchableHighlight style={styles.buttom} onPress={()=>navigation.navigate('CreateUsers')}>\n          <Text style={styles.buttomText}>Sign up</Text>\n        </TouchableHighlight>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  loginScreenContainer: {\n    flex: 1,\n    backgroundColor: color.Black,\n    alignItems: 'center',\n  },\n  loginFormView: {\n    marginTop: 120,\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '80%',\n    height: '60%',\n    backgroundColor: color.Gray,\n    borderRadius: 10,\n  },\n  image:{\n    height: 200,\n    width: 200,\n  },\n  loginTextInput: {\n    color: color.White,\n    borderColor: color.Black,\n    backgroundColor: color.Gray,\n    borderRadius: 10,\n    borderWidth: 1,\n    height: 40,\n    width: Dimensions.get('screen').width * 0.50,\n    fontSize: 14,\n    padding: 10,\n    margin: 5,\n  },\n  buttom: {\n    backgroundColor: color.AquaMarine,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 40,\n    margin: 4,\n    padding: 4,\n    width: Dimensions.get('screen').width * 0.30,\n    alignItems: 'center',\n    borderRadius: 10,\n    borderColor: color.Black,\n    borderWidth: 2,\n  },\n  buttomText: {\n    color: color.White,\n    textShadowColor: color.Black,\n    textShadowRadius: 2,\n    fontSize: 16,\n  },\n});\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}