{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\CESDE\\\\app-airbnb\\\\screens\\\\list-properties.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TouchableHighlight, FlatList } from 'react-native-gesture-handler';\nimport { useIsFocused } from '@react-navigation/native';\nimport CardComponent from \"./card-component\";\nimport color from \"../styles/colors\";\n\nfunction ListProperties(_ref) {\n  var navigation = _ref.navigation;\n  var isFocused = useIsFocused();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      appointments = _useState2[0],\n      setAppointments = _useState2[1];\n\n  var fetchAppointments = function fetchAppointments() {\n    var response, jsonResponse;\n    return _regeneratorRuntime.async(function fetchAppointments$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://www.json-generator.com/api/json/get/bUEFnRtzzC?indent=2'));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            jsonResponse = _context.sent;\n            setAppointments(jsonResponse.res.data);\n            console.log('json response: ', jsonResponse.res.data);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetchAppointments();\n  }, [isFocused]);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.createAppointmentButton,\n    onPress: function onPress() {\n      return navigation.navigate('Create Property', {\n        userid: userid\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.createAppointmentButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Create Property\")), React.createElement(FlatList, {\n    data: appointments,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(CardComponent, {\n        appointment: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 43\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item._id;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }));\n}\n\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: color.Black,\n    color: color.White,\n    justifyContent: 'center'\n  },\n  image: {\n    width: 160,\n    height: 160,\n    borderWidth: 1\n  },\n  createAppointmentButton: {\n    backgroundColor: color.AquaMarine,\n    padding: 20,\n    margin: 10,\n    alignItems: 'center',\n    textShadowColor: color.Black,\n    textShadowRadius: 1.5\n  },\n  createAppointmentButtonText: {\n    color: color.White,\n    fontWeight: 'bold',\n    fontSize: 17\n  },\n  title: {\n    fontSize: 16,\n    color: '#000'\n  }\n});\nexport default ListProperties;","map":{"version":3,"sources":["C:/CESDE/app-airbnb/screens/list-properties.js"],"names":["React","useState","useEffect","TouchableHighlight","FlatList","useIsFocused","CardComponent","color","ListProperties","navigation","isFocused","appointments","setAppointments","fetchAppointments","fetch","response","json","jsonResponse","res","data","console","log","styles","container","createAppointmentButton","navigate","userid","createAppointmentButtonText","item","_id","StyleSheet","create","flex","flexDirection","backgroundColor","Black","White","justifyContent","image","width","height","borderWidth","AquaMarine","padding","margin","alignItems","textShadowColor","textShadowRadius","fontWeight","fontSize","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, Image } from 'react-native';\nimport { TouchableHighlight, FlatList } from 'react-native-gesture-handler';\nimport { useIsFocused } from '@react-navigation/native';\nimport CardComponent from './card-component'\nimport color from '../styles/colors';\n\nfunction ListProperties({ navigation }) {\n    // const { userid } = params; //Id de inicio de sesion    \n    const isFocused = useIsFocused();\n    const [appointments, setAppointments] = useState([]);\n\n    /* Data for the flatlist */\n    const fetchAppointments = async () => {\n        //let response = await fetch('http://192.168.0.3:80/citapp_api_php/api/listappointments');\n        let response = await fetch('http://www.json-generator.com/api/json/get/bUEFnRtzzC?indent=2');\n        let jsonResponse = await response.json();\n        setAppointments(jsonResponse.res.data);\n        console.log('json response: ',jsonResponse.res.data);\n        \n    }\n    useEffect(() => {\n        fetchAppointments();\n    }, [isFocused]);\n\n    return (\n        <View style={styles.container}>\n          \n            <TouchableHighlight style={styles.createAppointmentButton} onPress={() =>\n                navigation.navigate('Create Property', {\n                    userid: userid\n                })}>\n                <Text style={styles.createAppointmentButtonText}>Create Property</Text>\n            </TouchableHighlight>\n\n            {/* <Image source={require('../assets/casa1.jpg')} ></Image> */}\n           \n            <FlatList\n                data={appointments}\n                renderItem={({ item }) => <CardComponent appointment={item} />}\n                keyExtractor={item => item._id}\n            />\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'column',\n        backgroundColor: color.Black,\n        color: color.White,\n        justifyContent: 'center',\n    },\n    image: {\n        width: 160,\n        height: 160,\n        borderWidth: 1,\n    },\n    createAppointmentButton: {\n        backgroundColor: color.AquaMarine,\n        padding: 20,\n        margin: 10,\n        alignItems: 'center',\n        textShadowColor: color.Black,\n        textShadowRadius: 1.5,\n    },\n    createAppointmentButtonText: {\n        color: color.White,\n        fontWeight: 'bold',\n        fontSize: 17,\n        // textShadowColor: color.Black,\n        // textShadowRadius: 1.5,\n    },\n    title: {\n        fontSize: 16,\n        color: '#000'\n    },\n});\n\n\nexport default ListProperties;\n"]},"metadata":{},"sourceType":"module"}