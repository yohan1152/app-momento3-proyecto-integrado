{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\CESDE\\\\app-airbnb\\\\screens\\\\create-properties.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TextInput, TouchableHighlight } from 'react-native-gesture-handler';\nimport color from \"../styles/colors\";\n\nfunction validate(title, type, address, rooms, price, area) {\n  var error = \"\";\n  var error_type = \"\";\n\n  if (title.length < 1) {\n    error = error + \"title, \";\n  }\n\n  if (isNaN(title)) {\n    error_type = error_type + \"title is not a number \";\n  }\n\n  if (type.length < 1) {\n    error = error + \"type, \";\n  }\n\n  if (isNaN(type)) {\n    error_type = error_type + \"type is not a number \";\n  }\n\n  if (address.length < 1) {\n    error = error + \"address, \";\n  }\n\n  if (rooms.length < 1) {\n    error = error + \"rooms, \";\n  }\n\n  if (isNaN(price)) {\n    error_type = error_type + \"price is not a number \";\n  }\n\n  if (price.length < 1) {\n    error = error + \"price, \";\n  }\n\n  if (area.length < 1) {\n    error = error + \"area, \";\n  }\n\n  if (error.length > 0) {\n    Alert.alert(\"Form failed\", \"The following items require your attention: \" + error);\n    return false;\n  } else {\n    if (error_type.length < 1) {\n      Alert.alert(\"Form failed\", \"The following items require your attention: \" + error_type);\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nfunction CreateProperties(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _ef8fd4d6072c6366c = '5ef8fd4d6072c6366c19017e',\n      author = _ef8fd4d6072c6366c.author;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address = _useState6[0],\n      setAddress = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      rooms = _useState8[0],\n      setRooms = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      price = _useState10[0],\n      setPrice = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      area = _useState12[0],\n      setArea = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      image = _useState14[0],\n      setImage = _useState14[1];\n\n  var createProperties = function createProperties() {\n    var response, json;\n    return _regeneratorRuntime.async(function createProperties$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!validate(title, type, address, rooms, price, area, image, author)) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.0.3:3000/api/add', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                title: title,\n                date: type,\n                address: address,\n                rooms: rooms,\n                price: price,\n                area: area,\n                image: image,\n                author: author\n              })\n            }));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            json = _context.sent;\n            Alert.alert(\"Property created successfuly\");\n            navigation.navigate('ListProperties', {\n              author: author\n            });\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            Alert.alert(\"An error has ocurred: \" + _context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 12]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Title\",\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Type\",\n    onChangeText: function onChangeText(text) {\n      return setType(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Address\",\n    onChangeText: function onChangeText(text) {\n      return setAddress(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Number of Rooms\",\n    onChangeText: function onChangeText(text) {\n      return setRooms(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Price\",\n    onChangeText: function onChangeText(text) {\n      return setPrice(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Area\",\n    onChangeText: function onChangeText(text) {\n      return setArea(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableHighlight, {\n    style: styles.createPropertyButton,\n    onPress: createProperties,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyleButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Create Property\")));\n}\n\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: color.Black\n  },\n  textInput: {\n    padding: 10,\n    borderColor: 'black',\n    borderRadius: 5,\n    borderWidth: 1,\n    marginTop: 10,\n    width: Dimensions.get('screen').width * 0.9\n  },\n  createPropertyButton: {\n    marginTop: 10,\n    padding: 15,\n    backgroundColor: color.AquaMarine,\n    borderRadius: 5,\n    width: Dimensions.get('screen').width * 0.9,\n    alignItems: 'center'\n  },\n  textStyleButton: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 17,\n    textShadowColor: color.Black,\n    textShadowRadius: 1\n  }\n});\nexport default CreateProperties;","map":{"version":3,"sources":["C:/CESDE/app-airbnb/screens/create-properties.js"],"names":["React","useState","TextInput","TouchableHighlight","color","validate","title","type","address","rooms","price","area","error","error_type","length","isNaN","Alert","alert","CreateProperties","route","navigation","author","setTitle","setType","setAddress","setRooms","setPrice","setArea","image","setImage","createProperties","fetch","method","headers","Accept","body","JSON","stringify","date","response","json","navigate","styles","container","textInput","text","createPropertyButton","textStyleButton","StyleSheet","create","flex","flexDirection","alignItems","backgroundColor","Black","padding","borderColor","borderRadius","borderWidth","marginTop","width","Dimensions","get","AquaMarine","fontWeight","fontSize","textShadowColor","textShadowRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, Dimensions, Alert } from 'react-native';\nimport { TextInput, TouchableHighlight } from 'react-native-gesture-handler';\nimport color from '../styles/colors';\n\nfunction validate(title, type, address, rooms, price, area) {\n    var error = \"\";\n    var error_type = \"\";\n    if (title.length < 1) { error = error + \"title, \" }\n    if (isNaN(title)) { error_type = error_type + \"title is not a number \" }\n    if (type.length < 1) { error = error + \"type, \" }\n    if (isNaN(type)) { error_type = error_type + \"type is not a number \" }\n    if (address.length < 1) { error = error + \"address, \" }\n    if (rooms.length < 1) { error = error + \"rooms, \" }\n    if (isNaN(price)) { error_type = error_type + \"price is not a number \" }\n    if (price.length < 1) { error = error + \"price, \" }\n    if (area.length < 1) { error = error + \"area, \" }\n    // if (image.length < 1) { error = error + \"image, \" }\n    // if (author.length < 1) { error = error + \"author, \" }\n\n    if (error.length > 0) {\n        Alert.alert(\"Form failed\",\"The following items require your attention: \" + error);\n        return false;\n    } else {\n        if (error_type.length < 1) {\n            Alert.alert(\"Form failed\",\"The following items require your attention: \" + error_type);\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\nfunction CreateProperties({ route, navigation }) {\n    // const { author } = route.params; \n    const { author } = '5ef8fd4d6072c6366c19017e'; //quemado\n    const [title, setTitle] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [address, setAddress] = useState(\"\");\n    const [rooms, setRooms] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [area, setArea] = useState(\"\");\n    const [image, setImage] = useState(\"\");\n    // const [author, setAuthor] = useState(\"\");\n    \n    const createProperties = async () => {\n        if (validate(title, type, address, rooms, price, area, image, author)) {\n            try {\n                const response = await fetch('http://192.168.0.3:3000/api/add', {\n                    method: 'POST',\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        title: title,\n                        date: type,\n                        address: address,\n                        rooms: rooms,\n                        price: price,\n                        area: area,\n                        image: image,\n                        author: author,\n                    }),\n                });\n                const json = await response.json();\n                Alert.alert(\"Property created successfuly\");\n                navigation.navigate('ListProperties', {\n                    author: author\n                });\n            } catch (error) {\n                Alert.alert(\"An error has ocurred: \" + error);\n            }\n        }\n    }\n\n    return (\n        <View style={styles.container}>\n            <TextInput style={styles.textInput} placeholder=\"Title\" onChangeText={text => setTitle(text)} />\n            <TextInput style={styles.textInput} placeholder=\"Type\" onChangeText={text => setType(text)} />\n            <TextInput style={styles.textInput} placeholder=\"Address\" onChangeText={text => setAddress(text)} />\n            <TextInput style={styles.textInput} placeholder=\"Number of Rooms\" onChangeText={text => setRooms(text)} />\n            <TextInput style={styles.textInput} placeholder=\"Price\" onChangeText={text => setPrice(text)} />\n            <TextInput style={styles.textInput} placeholder=\"Area\" onChangeText={text => setArea(text)} />\n            {/* <TextInput style={styles.textInput} placeholder=\"Image\" onChangeText={text => setImage(text)} /> */}\n\n            <TouchableHighlight style={styles.createPropertyButton} onPress={createProperties}>\n                <Text style={styles.textStyleButton}>Create Property</Text>\n            </TouchableHighlight>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor: color.Black,\n    },\n    textInput: {\n        padding: 10,\n        borderColor: 'black',\n        borderRadius: 5,\n        borderWidth: 1,\n        marginTop: 10,\n        width: Dimensions.get('screen').width * 0.9\n    },\n    createPropertyButton: {\n        marginTop: 10,\n        padding: 15,\n        backgroundColor: color.AquaMarine,\n        borderRadius: 5,\n        width: Dimensions.get('screen').width * 0.9,\n        alignItems: 'center'\n    },\n    textStyleButton: {\n        color: 'white',\n        fontWeight: 'bold',\n        fontSize: 17,\n        textShadowColor: color.Black,\n        textShadowRadius: 1,\n    }\n});\n\nexport default CreateProperties;"]},"metadata":{},"sourceType":"module"}