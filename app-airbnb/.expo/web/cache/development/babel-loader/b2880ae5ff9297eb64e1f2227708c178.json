{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\CESDE\\\\app-airbnb\\\\screens\\\\update-appointment.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TextInput, TouchableHighlight } from 'react-native-gesture-handler';\n\nfunction UpdateAppointment(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _route$params = route.params,\n      itemId = _route$params.itemId,\n      itemDate = _route$params.itemDate,\n      itemTitle = _route$params.itemTitle,\n      userid = _route$params.userid;\n\n  var _useState = useState(itemTitle),\n      _useState2 = _slicedToArray(_useState, 2),\n      appointmentTitle = _useState2[0],\n      setAppointmentTitle = _useState2[1];\n\n  var _useState3 = useState(itemDate),\n      _useState4 = _slicedToArray(_useState3, 2),\n      appointmentDate = _useState4[0],\n      setAppointmentDate = _useState4[1];\n\n  var updateAppointment = function updateAppointment() {\n    var response, json;\n    return _regeneratorRuntime.async(function updateAppointment$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.0.3:3000/api/updateAppointment', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                id: itemId,\n                title: appointmentTitle,\n                date: appointmentDate,\n                user: userid\n              })\n            }));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            Alert.alert(\"Appointment updated successfuly\");\n            navigation.navigate('ListAppointments', {\n              userid: userid\n            });\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            Alert.alert(\"An error has ocurred: \" + _context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 11]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"appointment description\",\n    onChangeText: function onChangeText(text) {\n      return setAppointmentTitle(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, itemTitle), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"appointment date\",\n    onChangeText: function onChangeText(text) {\n      return setAppointmentDate(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, itemDate), React.createElement(TouchableHighlight, {\n    style: styles.createAppointmentButton,\n    onPress: updateAppointment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyleButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Update Appointment\")));\n}\n\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: 50\n  },\n  textInput: {\n    padding: 20,\n    borderColor: 'black',\n    borderRadius: 5,\n    borderWidth: 1,\n    marginTop: 10,\n    width: Dimensions.get('screen').width * 0.9\n  },\n  createAppointmentButton: {\n    marginTop: 10,\n    padding: 15,\n    backgroundColor: '#0288d1',\n    borderRadius: 5,\n    width: Dimensions.get('screen').width * 0.9,\n    alignItems: 'center'\n  },\n  textStyleButton: {\n    color: 'white',\n    fontSize: 16\n  }\n});\nexport default UpdateAppointment;","map":{"version":3,"sources":["C:/CESDE/app-airbnb/screens/update-appointment.js"],"names":["React","useState","TextInput","TouchableHighlight","UpdateAppointment","route","navigation","params","itemId","itemDate","itemTitle","userid","appointmentTitle","setAppointmentTitle","appointmentDate","setAppointmentDate","updateAppointment","fetch","method","headers","Accept","body","JSON","stringify","id","title","date","user","response","json","Alert","alert","navigate","styles","container","textInput","text","createAppointmentButton","textStyleButton","StyleSheet","create","flex","flexDirection","alignItems","marginTop","padding","borderColor","borderRadius","borderWidth","width","Dimensions","get","backgroundColor","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, Dimensions, Alert } from 'react-native';\nimport { TextInput, TouchableHighlight } from 'react-native-gesture-handler';\n\nfunction UpdateAppointment({ route, navigation }) {\n    const { itemId, itemDate, itemTitle, userid } = route.params;    \n    const [appointmentTitle, setAppointmentTitle] = useState(itemTitle);    \n    const [appointmentDate, setAppointmentDate] = useState(itemDate);\n    const updateAppointment = async () => {\n\n        try {\n            const response = await fetch('http://192.168.0.3:3000/api/updateAppointment', {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    id: itemId,\n                    title: appointmentTitle,\n                    date: appointmentDate,\n                    user: userid\n                }),\n            });\n            const json = await response.json();\n            Alert.alert(\"Appointment updated successfuly\");\n            navigation.navigate('ListAppointments',{\n                userid: userid\n              });\n        } catch (error) {\n            Alert.alert(\"An error has ocurred: \" + error);            \n        }\n    }\n\n\n    return (\n        <View style={styles.container}>\n            <TextInput style={styles.textInput} placeholder=\"appointment description\" onChangeText={text => setAppointmentTitle(text)}>{itemTitle}</TextInput>\n            <TextInput style={styles.textInput} placeholder=\"appointment date\" onChangeText={text => setAppointmentDate(text)}>{itemDate}</TextInput>\n            <TouchableHighlight style={styles.createAppointmentButton} onPress={updateAppointment}>\n                <Text style={styles.textStyleButton}>Update Appointment</Text>\n            </TouchableHighlight>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginTop: 50\n    },\n    textInput: {\n        padding: 20,\n        borderColor: 'black',\n        borderRadius: 5,\n        borderWidth: 1,\n        marginTop: 10,\n        width: Dimensions.get('screen').width * 0.9\n    },\n    createAppointmentButton: {\n        marginTop: 10,\n        padding: 15,\n        backgroundColor: '#0288d1',\n        borderRadius: 5,\n        width: Dimensions.get('screen').width * 0.9,\n        alignItems: 'center'\n    },\n    textStyleButton: {\n        color: 'white',\n        fontSize: 16\n    }\n});\nexport default UpdateAppointment;\t"]},"metadata":{},"sourceType":"module"}